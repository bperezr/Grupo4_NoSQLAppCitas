use mediConnect;

db.createCollection("Usuarios", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["email", "contraseña", "rol", "estado"],
            properties: {
                email: { bsonType: "string", pattern: "^.+@.+\..+$", description: "Debe ser un correo válido" },
                contraseña: { bsonType: "string", minLength: 8, description: "Debe tener al menos 8 caracteres" },
                rol: { bsonType: "string", enum: ["paciente", "doctor", "admin"], description: "Rol del usuario" },
                especialidad: { bsonType: "string", description: "Especialidad del doctor (opcional)" },
                estado: { bsonType: "string", enum: ["activo", "inactivo"] }
            }
        }
    },
    validationAction: "error test"
});

db.Usuarios.createIndex({ email: 1 }, { unique: true });
db.Usuarios.createIndex({ rol: 1 });

db.createCollection("Citas", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["pacienteId", "doctorId", "fechaHora", "estado"],
            properties: {
                pacienteId: { bsonType: "objectId" },
                doctorId: { bsonType: "objectId" },
                fechaHora: { bsonType: "date" },
                estado: { bsonType: "string", enum: ["pendiente", "confirmada", "cancelada"] },
                motivo: { bsonType: "string" },
                notas: { bsonType: "string" }
            }
        }
    },
    validationAction: "error"
});

db.Citas.createIndex({ pacienteId: 1 });
db.Citas.createIndex({ doctorId: 1 });
db.Citas.createIndex({ fechaHora: 1 });
db.Citas.createIndex({ estado: 1 });

db.createCollection("Especialidades", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["nombreEspecialidad", "precioConsulta"],
            properties: {
                nombreEspecialidad: { bsonType: "string" },
                descripcion: { bsonType: "string" },
                precioConsulta: { bsonType: "double" }
            }
        }
    },
    validationAction: "error"
});

db.Especialidades.createIndex({ nombreEspecialidad: 1 }, { unique: true });

db.createCollection("Doctores", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["nombre", "apellido", "email", "especialidad", "estado"],
            properties: {
                nombre: { bsonType: "string" },
                apellido: { bsonType: "string" },
                email: { bsonType: "string", pattern: "^.+@.+\..+$" },
                especialidad: { bsonType: "string" },
                horarioAtencion: { bsonType: "string" },
                sucursalId: { bsonType: "objectId" },
                estado: { bsonType: "string", enum: ["activo", "inactivo"] }
            }
        }
    },
    validationAction: "error"
});

db.Doctores.createIndex({ email: 1 }, { unique: true });
db.Doctores.createIndex({ especialidad: 1 });
db.Doctores.createIndex({ sucursalId: 1 });

db.createCollection("Recetas", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["pacienteId", "doctorId", "medicamentos", "indicaciones", "fechaEmision"],
            properties: {
                pacienteId: { bsonType: "objectId" },
                doctorId: { bsonType: "objectId" },
                medicamentos: { bsonType: "array", items: { bsonType: "string" } },
                indicaciones: { bsonType: "string" },
                fechaEmision: { bsonType: "date" }
            }
        }
    },
    validationAction: "error"
});

db.Recetas.createIndex({ pacienteId: 1 });
db.Recetas.createIndex({ doctorId: 1 });

db.createCollection("HistorialCitas", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["citaId", "modificadoPor", "fechaModificacion", "cambioRealizado"],
            properties: {
                citaId: { bsonType: "objectId" },
                modificadoPor: { bsonType: "objectId" },
                fechaModificacion: { bsonType: "date" },
                cambioRealizado: { bsonType: "string" }
            }
        }
    },
    validationAction: "error"
});

db.HistorialCitas.createIndex({ citaId: 1 });
db.HistorialCitas.createIndex({ modificadoPor: 1 });

db.createCollection("Pacientes", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["nombre", "apellido", "email", "telefono"],
            properties: {
                nombre: { bsonType: "string" },
                apellido: { bsonType: "string" },
                email: { bsonType: "string", pattern: "^.+@.+\..+$" },
                telefono: { bsonType: "string" },
                direccion: { bsonType: "string" },
                fechaNacimiento: { bsonType: "date" },
                historialMedico: { bsonType: "string" }
            }
        }
    },
    validationAction: "error"
});

db.Pacientes.createIndex({ email: 1 }, { unique: true });
db.Pacientes.createIndex({ telefono: 1 });

db.createCollection("Sucursales", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["nombre", "direccion", "telefono"],
            properties: {
                nombre: { bsonType: "string" },
                direccion: { bsonType: "string" },
                telefono: { bsonType: "string" },
                horarioAtencion: { bsonType: "string" },
                estado: { bsonType: "string", enum: ["activo", "inactivo"] }
            }
        }
    },
    validationAction: "error"
});

db.Sucursales.createIndex({ nombre: 1 });

db.createCollection("HorariosDisponibles", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["doctorId", "fecha", "horaInicio", "horaFin", "disponible"],
            properties: {
                doctorId: { bsonType: "objectId" },
                fecha: { bsonType: "date" },
                horaInicio: { bsonType: "string" },
                horaFin: { bsonType: "string" },
                disponible: { bsonType: "bool" }
            }
        }
    },
    validationAction: "error"
});

db.HorariosDisponibles.createIndex({ doctorId: 1, fecha: 1 });

db.createCollection("Pagos", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["citaId", "pacienteId", "monto", "fechaPago", "estado"],
            properties: {
                citaId: { bsonType: "objectId" },
                pacienteId: { bsonType: "objectId" },
                monto: { bsonType: "double" },
                fechaPago: { bsonType: "date" },
                estado: { bsonType: "string", enum: ["pendiente", "pagado", "cancelado"] }
            }
        }
    },
    validationAction: "error"
});

db.Pagos.createIndex({ citaId: 1 });
db.Pagos.createIndex({ pacienteId: 1 });
db.Pagos.createIndex({ estado: 1 });

db.createCollection("Notificaciones", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["usuarioId", "mensaje", "tipo", "fechaEnvio", "leido"],
            properties: {
                usuarioId: { bsonType: "objectId" },
                mensaje: { bsonType: "string" },
                tipo: { bsonType: "string" },
                fechaEnvio: { bsonType: "date" },
                leido: { bsonType: "bool" }
            }
        }
    },
    validationAction: "error"
});

db.Notificaciones.createIndex({ usuarioId: 1, leido: 1 });

db.createCollection("BitacoraUso", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["usuarioId", "fechaHora", "tipoAccion"],
            properties: {
                usuarioId: { bsonType: "objectId" },
                fechaHora: { bsonType: "date" },
                tipoAccion: { bsonType: "string" }
            }
        }
    },
    validationAction: "error"
});

db.BitacoraUso.createIndex({ usuarioId: 1 });
db.BitacoraUso.createIndex({ fechaHora: -1 });