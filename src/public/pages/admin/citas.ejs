<div class="content">
    <div class="content__title">
        <h1>Crear cita</h1>
    </div>
  <form id="citaForm" >
    <div class="dashboard-grid">
        <!-- Citas del día -->
        <div class="card card--principal">
            <h3 class="card__title">Información de la cita</h3>
            <div class="info-container horaClass">
                <div class="content__title">
                  <h3>Datos de la cita</h3>
                </div>               
                    <!-- Buscador de paciente -->
                    <div class="form-group">
                      <label for="Cedula">Cédula del Paciente</label>
                      <div class="search-paciente">
                        <input type="text" id="Cedula" placeholder="Ingrese cédula">
                        <button class="btnBuscar" type="button" onclick="ConsultarCedula()">Buscar</button>
                      </div>
                      <div id="pacienteInfo" class="paciente-info"></div>
                      <input type="hidden" name="pacienteId" id="pacienteIdInput">
                    </div>
              
                    <!-- Nombre (rellenado por API externa) -->
                    <div class="form-group">
                      <label for="Nombre">Nombre del Paciente</label>
                      <input type="text" id="Nombre" readonly>
                    </div>
              
                    <!-- Especialidad -->
                    <div class="form-group">
                        <label for="doctorSelect">Especialidad</label>
                    <select id="especialidad" name="especialidadId" required>
                        <option value="">Seleccione una especialidad</option>
                    </select>
                    </label>
                    </div>
                    <input type="hidden" name="sucursalId" id="sucursalId" value="68000823468c4e7fbdb5101e">
              
                    <!-- Doctor -->
                    <div class="form-group">
                      <label for="doctorSelect">Doctor</label>
                      <select id="doctorSelect" name="doctorId" required>                        
                      </select>
                    </div>
              
                    <!-- Estado oculto -->
                    <input type="hidden" name="estado" value="pendiente">
              
                    <!-- Motivo -->
                    <div class="form-group">
                      <label for="motivo">Motivo de la consulta</label>
                      <textarea id="motivo" name="motivo" rows="2" required></textarea>
                    </div>
              </div>
        </div>

        <div class="card card--small card--pos2">
            <h3 class="card__title">Seleccione la fecha</h3>
            <div class="agenda-container">                    
                <div class="calendar-container">
                    <input type="hidden" id="doctorIdInput" value="68000a08774fcfc27226ad06">
                    <div class="calendar-header tituloAgenda">
                      <button onclick="changeMonth(-1)"><i class="fa fa-chevron-left"></i></button>
                      <h2 id="monthYear">Mes Año</h2>
                      <button onclick="changeMonth(1)"><i class="fa fa-chevron-right"></i></button>
                    </div>
                    <div class="calendar-grid" id="calendarGrid">                    
                    </div>
                  </div>               
                 
            </div>
        </div>

        <div class="card card--small card--pos3">
            <h3 class="card__title">Seleccione la hora</h3>
            <div class="time-slot-container horaClass">
                <h3>Horas disponibles</h3>
                <div id="timeSlots" class="time-slot-grid">             
                </div>
              </div>
        </div>

        <div style="text-align:center; margin-top:1rem;">
            <button type="submit" class="btn btn--primary">Guardar cita</button>
        </div>
    </form>
    </div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const selectEsp = document.getElementById('especialidad');

  fetch('/admin/especialidades/listar')
    .then(res => {
      if (!res.ok) throw new Error('No fue posible cargar especialidades');
      return res.json();
    })
    .then(especialidades => {
      especialidades.forEach(e => {
        const opt = document.createElement('option');
        opt.value = e._id;    
        opt.textContent = e.nombreEspecialidad;
        selectEsp.appendChild(opt);
      });
    })
    .catch(err => {
      console.error(err);

    });
});

document.getElementById('especialidad').addEventListener('change', function() {
    const especialidadId = this.value;
    const doctorSelect   = document.getElementById('doctorSelect');

    doctorSelect.innerHTML = '<option value="">Cargando doctores…</option>';

    if (!especialidadId) {
      doctorSelect.innerHTML = '<option value="">Seleccione una especialidad </option>';
      return;
    }

    fetch(`/admin/doctores/listar/${especialidadId}`)
      .then(res => {
        if (!res.ok) throw new Error('Error al cargar doctores');
        return res.json();
      })
      .then(doctores => {
        if (!doctores || doctores.length === 0) {
        doctorSelect.innerHTML = '<option value="">No hay doctores para esta especialidad</option>';
        return;
        }

        let options = '<option value="">Seleccione un doctor</option>';
        doctores.forEach(doc => {
        options += `<option value="${doc._id}">${doc.nombre} ${doc.apellidos}</option>`;
        });
        doctorSelect.innerHTML = options;
      })
      .catch(err => {
        console.error(err);
        doctorSelect.innerHTML = '<option value="">No fue posible cargar doctores</option>';
      });
  });

 function ConsultarCedula() {
      const cedula = $("#Cedula").val().trim();
      if (!cedula) return alert('Ingrese una cédula');
      $.ajax({
        url: "https://apis.gometa.org/cedulas/" + cedula,
        method: "GET",
        dataType: "json",
        success(response) {
          if (response.results?.length) {
            const result = response.results[0];
            let fullName = "";
            if (response.tipoIdentificacion === "01") {
              [result.firstname1, result.firstname2, result.lastname1, result.lastname2]
                .filter(Boolean)
                .forEach(n => fullName += n + " ");
            } else {
              fullName = result.fullname || response.nombre || "";
            }
            fullName = fullName.trim().split(" ")
              .map(w => w.charAt(0).toUpperCase() + w.slice(1).toLowerCase())
              .join(" ");
            $("#Nombre").val(fullName);

            $.ajax({
              url: `/admin/pacientes/consultar/${cedula}`,
              method: "GET",              
              success(user) {          
                if (!user) {         
                $("#Nombre").val("");
                $("#pacienteInfo").html(
                    'Paciente no encontrado. <a href="/admin/pacientes">Registrar nuevo paciente</a>'
                );
                $("#pacienteIdInput").val("");
                return;
                }
                $("#pacienteIdInput").val(user._id);
                $("#Nombre").val(`${user.nombre} ${user.apellido}`);
            },
                error() {
                $("#pacienteInfo").text("Error al buscar paciente interno");
              }
            });
          } else {
            $("#pacienteInfo").text("Cédula no encontrada");
          }
        }
      });
    }

    const horariosBase = [];
    for (let h = 8; h <= 18; h++) {
      horariosBase.push(`${String(h).padStart(2,'0')}:00`);
    }

    let currentDate = new Date(),
        selectedDate = null,
        selectedHour = null;

    function renderCalendar(date) {
      const grid = document.getElementById("calendarGrid"),
            header = document.getElementById("monthYear");
      grid.innerHTML = "";
      const y = date.getFullYear(), m = date.getMonth();
      header.textContent = date.toLocaleDateString('es-ES',{month:'long',year:'numeric'});
      const firstDay = new Date(y,m,1).getDay(),
            daysInMonth = new Date(y,m+1,0).getDate();
      for(let i=0;i<firstDay;i++) grid.appendChild(document.createElement("div"));
      for(let d=1; d<=daysInMonth; d++){
        const cell = document.createElement("div");
        cell.className="calendar-cell";
        cell.textContent=d;
        const iso = new Date(y,m,d).toISOString().split('T')[0];
        cell.onclick = () => {
          selectedDate = iso;
          document.querySelectorAll('.calendar-cell')
                  .forEach(c=>c.classList.remove('selected'));
          cell.classList.add('selected');
          selectedHour = null;
          cargarHoras(iso, document.getElementById('doctorSelect').value);
        };
        grid.appendChild(cell);
      }
    }
    function changeMonth(o){ currentDate.setMonth(currentDate.getMonth()+o); renderCalendar(currentDate); }

function cargarHoras(fecha, doctorId) {
  const cont = document.getElementById('timeSlots');
  cont.innerHTML = '';
  if (!fecha || !doctorId) return;

  fetch(`/admin/horariosNoDisponible?fecha=${fecha}&doctorId=${doctorId}`)
    .then(r => r.json())
    .then(data => {
      const bloqueados = [];

      data.forEach(h => {
        const ini = parseInt(h.horaInicio.split(':')[0], 10);
        const fin = parseInt(h.horaFin.split(':')[0], 10);
        for (let i = ini; i < fin; i++) {
          bloqueados.push(`${String(i).padStart(2, '0')}:00`);
        }
      });

      horariosBase.forEach(hora => {  
        const btn = document.createElement('button');
        btn.type = "button";
        btn.textContent = hora;
        btn.disabled = bloqueados.includes(hora);

        btn.onclick = () => {
          selectedHour = hora;
          document
            .querySelectorAll('#timeSlots button')
            .forEach(b => b.classList.remove('selected'));
          btn.classList.add('selected');
        };
        cont.appendChild(btn);
      });
    })
    .catch(console.error);
}

 renderCalendar(currentDate);

    // Envío del formulario
    $("#citaForm").on('submit', function(e) {
        e.preventDefault();
        if (!selectedDate || !selectedHour) {
            return alert('Seleccione fecha y hora');
        }

        const form = this;
        const fechaHora = new Date(`${selectedDate}T${selectedHour}:00`);
        const payload = {
            pacienteId:      form.pacienteId.value,
            especialidadId:  form.especialidadId.value,
            doctorId:        form.doctorId.value,
            sucursalId:      form.sucursalId?.value,
            fechaHora,
            estado:          form.estado.value,
            motivo:          form.motivo.value
        };

        fetch('/admin/crearCitas', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        })
        .then(r => {
            if (!r.ok) throw new Error('Error al crear cita');
            return r.json();
        })
        .then(res => alert('Cita creada ID: ' + res._id))
        .catch(err => alert(err.message));
        console.log(res)
        });
  </script>



