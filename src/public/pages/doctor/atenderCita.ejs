<% const hoyCR=new Date().toLocaleDateString('es-CR', { timeZone: 'America/Costa_Rica' , year: 'numeric' , month: 'long'
    , day: 'numeric' }); %>

    <div class="content">

        <div class="content__title">
            <h1>Atender Cita ‚Äì <%= hoyCR %>
        </div>

        <div class="container__header">
            <div class="btn-agregar-wrapper">
                <a href="/doctor/citas" class="cita-doctor-btn">
                    <i class="fa-solid fa-arrow-left"></i> Atr√°s
                </a>
            </div>
        </div>

        <form action="/doctor/citas/<%= cita._id %>/atender" method="POST" class="cita-doctor-form"
            style="display: flex; gap: 2rem; flex-wrap: wrap; justify-content: center;">
            <!-- üìå Columna izquierda -->
            <div style="flex: 1 1 450px;">
                <div class="cita-doctor-card">
                    <h3 class="cita-doctor-title">üßç Paciente</h3>
                    <p><strong>Nombre:</strong>
                        <%= cita.pacienteId?.nombre %>
                            <%= cita.pacienteId?.apellido %>
                    </p>
                    <p><strong>Tel√©fono:</strong>
                        <%= cita.pacienteId?.telefono %>
                    </p>
                    <p><strong>C√©dula:</strong>
                        <%= cita.pacienteId?.cedula %>
                    </p>
                    <p><strong>Email:</strong>
                        <%= cita.pacienteId?.email %>
                    </p>
                    <p><strong>Direcci√≥n:</strong>
                        <%= cita.pacienteId?.direccion %>
                    </p>
                    <p><strong>Fecha Nacimiento:</strong>
                        <%= new Date(cita.pacienteId?.fechaNacimiento).toLocaleDateString('es-CR', { year: 'numeric' ,
                            month: 'long' , day: 'numeric' , timeZone: 'America/Costa_Rica' }) %>
                    </p>
                </div>

                <div class="cita-doctor-card">
                    <h3 class="cita-doctor-title">üìã Informaci√≥n de la Cita</h3>
                    <p><strong>Hora:</strong>
                        <%= new Date(cita.fechaHora).toLocaleTimeString('es-CR', { timeZone: 'America/Costa_Rica' ,
                            hour: '2-digit' , minute: '2-digit' }) %>
                    </p>
                    <p><strong>Motivo:</strong>
                        <%= cita.motivo || '---' %>
                    </p>
                    <p><strong>Notas:</strong>
                        <%= cita.notas || '---' %>
                    </p>
                    <p><strong>Estado:</strong>
                        <%= cita.estado || '---' %>
                    </p>
                    <p><strong>Especialidad:</strong>
                        <%= cita.especialidadId?.nombreEspecialidad || '---' %>
                    </p>
                    <p><strong>Sucursal:</strong>
                        <%= cita.doctorId?.sucursalId?.nombre || '---' %>
                    </p>
                </div>
            </div>

            <!-- üìù Columna derecha -->
            <div style="flex: 1 1 450px;">
                <div class="cita-doctor-card">
                    <div class="cita-doctor-form-group">
                        <label for="notas">üìù <strong>Notas de Atenci√≥n:</strong></label>
                        <textarea id="notas" name="notas" rows="7" required><%= cita.notas || '' %></textarea>
                    </div>

                    <div class="cita-doctor-form-group">
                        <label for="estado">üìå <strong>Estado de la Cita:</strong></label>
                        <select id="estado" name="estado" required>
                            <option value="completada" <%=cita.estado==='completada' ? 'selected' : '' %>>‚úÖ Completada
                            </option>
                            <option value="cancelada" <%=cita.estado==='cancelada' ? 'selected' : '' %>>‚ùå Cancelada
                            </option>
                        </select>
                    </div>

                    <div class="cita-doctor-form-group text-center">
                        <button type="button" class="cita-doctor-btn" id="btnAbrirReceta" onclick="abrirModalReceta()">
                            <i class="fa-solid fa-prescription-bottle-medical"></i> Receta
                        </button>
                    </div>

                    <div class="cita-doctor-form-group text-center">
                        <button type="submit" class="cita-doctor-btn2">
                            <i class="fa-solid fa-floppy-disk"></i> Guardar
                        </button>
                    </div>
                </div>
            </div>
        </form>
        <% if (recetas && recetas.length> 0) { %>
            <div class="cita-doctor-card" style="margin-top: 2rem;">
                <h3 class="cita-doctor-title">üßæ Recetas Asociadas</h3>

                <% recetas.forEach(r=> { %>
                    <div
                        style="padding: 1rem; border: 1px solid #ddd; border-radius: 8px; margin-bottom: 1rem; background-color: #f9f9f9;">
                        <p><strong>ID:</strong>
                            <%= r._id %>
                        </p>
                        <p><strong>Estado:</strong>
                            <% if (r.estado==='Pendiente' ) { %>
                                <span style="color: orange; font-weight: bold;">Pendiente</span>
                                <% } else if (r.estado==='Entregado' ) { %>
                                    <span style="color: green; font-weight: bold;">Entregado</span>
                                    <% } else { %>
                                        <span style="color: gray;">Cancelado</span>
                                        <% } %>
                        </p>
                        <p><strong>Fecha de Entrega:</strong>
                            <%= new Date(r.fechaEntrega).toLocaleString('es-CR', { timeZone: 'America/Costa_Rica' }) %>
                        </p>
                        <p><strong>Notas:</strong>
                            <%= r.notas || '---' %>
                        </p>
                        <p><strong>Medicamentos:</strong></p>
                        <ul style="padding-left: 1.5rem;">
                            <% r.medicamentos.forEach(m=> { %>
                                <li>
                                    <%= m.medicamentoId?.nombre || 'Sin nombre' %> ‚Äî
                                        Cantidad: <%= m.cantidad %>
                                </li>
                                <% }) %>
                        </ul>

                        <div style="text-align: right; margin-top: 0.5rem;">
                            <button type="button" class="btn-eliminar-receta" onclick="eliminarReceta('<%= r._id %>')">
                                Eliminar receta
                            </button>
                        </div>

                    </div>

                    <% }) %>
            </div>
            <% } else { %>
                <div class="cita-doctor-card" style="margin-top: 2rem;">
                    <h3 class="cita-doctor-title">üßæ Recetas Asociadas</h3>
                    <p style="color: #777;">No hay recetas registradas para esta cita.</p>
                </div>
                <% } %>

    </div>

    <!-- Modal Receta mejorado -->
    <div id="modalReceta" class="modal">
        <div class="modal__content" style="max-width: 600px;">
            <div class="receta__header">
                <span class="modal__close" onclick="cerrarModalReceta()">&times;</span>
                <h2>Crear Receta M√©dica</h2>
            </div>
            <form id="formReceta" method="POST" action="/recetas/crear">
                <input type="hidden" name="pacienteId" value="<%= cita.pacienteId._id %>">
                <input type="hidden" name="doctorId" value="<%= cita.doctorId._id %>">
                <input type="hidden" name="sucursalId" value="<%= cita.doctorId.sucursalId._id %>">

                <!-- Campo de notas -->
                <div class="cita-doctor-form-group">
                    <label for="notasReceta">üìù Notas adicionales:</label>
                    <textarea id="notasReceta" name="notas" rows="3"
                        placeholder="Observaciones adicionales..."></textarea>
                </div>

                <!-- Selector de medicamento -->
                <div class="cita-doctor-form-group" style="display: flex; gap: 1rem; align-items: center;">
                    <select id="selectorMedicamento" class="select-medicamento" style="flex: 1;">
                        <option value="">Seleccione un medicamento</option>
                    </select>
                    <button type="button" class="btn-agregar" onclick="agregarMedicamentoSeleccionado()">
                        <i class="fa-solid fa-plus"></i> Agregar
                    </button>
                </div>

                <!-- Tabla de medicamentos a√±adidos -->
                <div style="margin-top: 1rem; max-height: 250px; overflow-y: auto;">
                    <table class="tabla-receta" style="width: 100%; text-align: left;">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th style="width: 100px;">Cantidad</th>
                                <th style="width: 40px;"></th>
                            </tr>
                        </thead>
                        <tbody id="tablaMedicamentosReceta">
                            <!-- JS insertar√° aqu√≠ -->
                        </tbody>
                    </table>
                </div>

                <!-- Bot√≥n de env√≠o -->
                <div style="margin-top: 2rem; text-align: center;">
                    <button type="submit" class="cita-doctor-btn2">
                        <i></i> Crear Receta
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let recetaMedicamentos = [];

        function abrirModalReceta() {
            const sucursalId = "<%= cita.doctorId.sucursalId._id %>";

            fetch(`/api/medicamentos?sucursalId=${sucursalId}`)
                .then(res => res.json())
                .then(data => {
                    window.medicamentosSucursal = data;

                    const selector = document.getElementById("selectorMedicamento");
                    selector.innerHTML = `<option value="">Seleccione un medicamento</option>` +
                        data.map(m =>
                            `<option value="${m._id}"
                                data-nombre="${m.nombre}"
                                data-marca="${m.marca}"
                                data-tipo="${m.tipo}"
                                data-stock="${m.stock}">
                                ${m.nombre} (${m.marca}) - ${m.tipo} - Stock: ${m.stock}
                            </option>`
                        ).join("");

                    recetaMedicamentos = [];
                    actualizarTablaReceta();
                    document.getElementById("modalReceta").style.display = "block";
                })
                .catch(err => {
                    console.error("Error al cargar medicamentos:", err);
                    Swal.fire("Error", "No se pudieron cargar los medicamentos", "error");
                });
        }

        function cerrarModalReceta() {
            document.getElementById("modalReceta").style.display = "none";
        }

        function agregarMedicamentoSeleccionado() {
            const select = document.getElementById("selectorMedicamento");
            const selected = select.options[select.selectedIndex];
            const medicamentoId = selected.value;

            if (!medicamentoId || recetaMedicamentos.find(m => m.medicamentoId === medicamentoId)) return;

            recetaMedicamentos.push({
                medicamentoId,
                cantidad: 1
            });

            actualizarTablaReceta();
        }

        function actualizarCantidad(index, valor) {
            const cantidadIngresada = parseInt(valor) || 1;
            const medicamentoId = recetaMedicamentos[index].medicamentoId;
            const stockDisponible = window.medicamentosSucursal.find(m => m._id === medicamentoId)?.stock || 1;

            if (cantidadIngresada > stockDisponible) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cantidad excedida',
                    text: `Solo hay ${stockDisponible} unidades disponibles.`,
                    confirmButtonText: 'Entendido',
                    confirmButtonColor: '#3085d6',
                });

                recetaMedicamentos[index].cantidad = stockDisponible;
            } else {
                recetaMedicamentos[index].cantidad = cantidadIngresada;
            }

            actualizarTablaReceta();
        }

        function actualizarTablaReceta() {
            const tbody = document.getElementById("tablaMedicamentosReceta");

            tbody.innerHTML = recetaMedicamentos.map((med, index) => {
                const info = window.medicamentosSucursal.find(m => m._id === med.medicamentoId);

                return `
                <tr>
                    <td>
                        ${info ? `${info.nombre} (${info.marca}) - ${info.tipo} ‚Äì
                        <span style="color: ${getColorStock(info.stock)}; font-weight: bold;">${info.stock}</span>` : 'Medicamento'}
                    </td>
                    <td>
                        <input type="number"
                            value="${med.cantidad}"
                            min="1"
                            max="${info?.stock || 1}"
                            onchange="actualizarCantidad(${index}, this.value)">
                    </td>
                    <td>
                        <button type="button" class="btn-eliminar" onclick="eliminarMedicamentoReceta(${index})">
                            <i class="fa-solid fa-xmark"></i>
                        </button>
                    </td>
                </tr>`;
            }).join("");
        }

        function eliminarMedicamentoReceta(index) {
            recetaMedicamentos.splice(index, 1);
            actualizarTablaReceta();
        }

        function getColorStock(stock) {
            if (stock <= 10) return 'red';
            if (stock <= 30) return 'orange';
            return 'green';
        }

        async function sincronizarYEnviarReceta() {
            const notas = document.getElementById("notasReceta").value || '';
            const cantidadInputs = document.querySelectorAll("#tablaMedicamentosReceta input[type='number']");

            cantidadInputs.forEach((input, i) => {
                recetaMedicamentos[i].cantidad = parseInt(input.value) || 1;
            });

            try {
                const response = await fetch('/recetas/crear-json', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        pacienteId: "<%= cita.pacienteId._id %>",
                        doctorId: "<%= cita.doctorId._id %>",
                        sucursalId: "<%= cita.doctorId.sucursalId._id %>",
                        citaId: "<%= cita._id %>",
                        notas,
                        medicamentos: recetaMedicamentos
                    })
                });

                if (!response.ok) throw new Error('Error al guardar receta');

                const data = await response.json();

                Swal.fire({
                    icon: 'success',
                    title: 'Receta creada',
                    text: 'La receta fue registrada correctamente.',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.reload();
                });


                Swal.fire({
                    icon: 'success',
                    title: 'Receta creada',
                    text: 'La receta fue registrada correctamente.'
                });

                cerrarModalReceta();

                const botonReceta = document.getElementById("btnAbrirReceta");
                if (botonReceta) {
                    botonReceta.disabled = true;
                    botonReceta.classList.add("disabled");
                }

                const resumen = document.getElementById("resumenReceta");
                if (resumen) {
                    resumen.innerHTML = `
                    <div class="alert alert-success" style="margin-top:1rem;">
                        ‚úÖ Receta registrada para el paciente. Medicamentos: ${recetaMedicamentos.length}.
                    </div>`;
                }

            } catch (err) {
                console.error('Error al enviar receta:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'No se pudo guardar la receta'
                });
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const formReceta = document.getElementById('formReceta');
            const btnEnviarReceta = formReceta?.querySelector('.cita-doctor-btn2');

            if (btnEnviarReceta && formReceta) {
                btnEnviarReceta.addEventListener('click', function (e) {
                    e.preventDefault();

                    if (recetaMedicamentos.length === 0) {
                        return Swal.fire({
                            icon: 'warning',
                            title: 'Sin medicamentos',
                            text: 'Debes agregar al menos un medicamento antes de enviar la receta.',
                            confirmButtonText: 'Entendido'
                        });
                    }

                    Swal.fire({
                        title: '¬øEnviar receta?',
                        text: `Se registrar√° la receta m√©dica con ${recetaMedicamentos.length} medicamento(s).`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'S√≠, enviar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            sincronizarYEnviarReceta();
                        }
                    });
                });
            }
        });
    </script>

    <script>
        function eliminarReceta(recetaId) {
            Swal.fire({
                title: '¬øEliminar receta?',
                text: 'Esta acci√≥n no se puede deshacer.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'S√≠, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/doctor/citas/${recetaId}/eliminar`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(res => {
                            if (!res.ok) return res.json().then(err => { throw err; });
                            return res.json();
                        })
                        .then(data => {
                            Swal.fire({
                                icon: 'success',
                                title: 'Receta eliminada',
                                text: data.mensaje || 'La receta fue eliminada correctamente.'
                            }).then(() => location.reload());
                        })
                        .catch(err => {
                            console.error(err);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: err?.error || 'Ocurri√≥ un error al eliminar la receta.'
                            });
                        });
                }
            });
        }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.querySelector('.cita-doctor-form');
            const btnGuardar = form.querySelector('.cita-doctor-btn2');

            // Evitar el env√≠o por defecto
            btnGuardar.addEventListener('click', function (event) {
                event.preventDefault();

                Swal.fire({
                    title: '¬øGuardar atenci√≥n?',
                    text: 'Se actualizar√° la informaci√≥n de la cita.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'S√≠, guardar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });
    </script>